Index: Snake/src/Main/GameFrame.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Main;\r\n\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.*;\r\nimport java.util.TimerTask;\r\nimport java.util.Timer;\r\n\r\n\r\nimport Object.*;\r\nimport ButtonCollection.*;\r\n\r\n\r\npublic class GameFrame extends JFrame implements KeyListener {\r\n    //定义区，定义蛇，食物等对象\r\n    public enum GameScene {main, game, pause, end}\r\n\r\n    private int l = 30, x = 5, y = 30;\r\n    private Image image = null;\r\n    private Food food = new Food();\r\n    private Snake snake = new Snake();\r\n\r\n    private Camera camera = new Camera();\r\n    private GameScene game_scene;\r\n    private ButtonCollection collection = new ButtonCollection();;\r\n    private Enemy[] enemy;\r\n    //定时区，定义timertask对象设置定时任务，再定义timer对象定时执行该任务\r\n    private TimerTask task = new TimerTask() {\r\n        //执行任务内容\r\n        @Override\r\n        public void run() {\r\n            //游戏场景是否为“游戏中”\r\n            if (getGameScene() == GameFrame.GameScene.game) {\r\n                //蛇移动\r\n                snake.move();\r\n                //摄像头移动\r\n                camera.move(snake);\r\n                for (int i = 0;i < 5;i++) {\r\n                    //敌人移动\r\n                    enemy[i].move(snake);\r\n                    //敌人攻击\r\n                    enemy[i].attack(snake,GameFrame.this);\r\n                }\r\n                //检测蛇是否撞到墙壁或者自己\r\n                snake.checkAlive(GameFrame.this);\r\n                //是否吃到食物\r\n                if (food.checkEat(snake)) {\r\n                    //食物转移到下一个位置\r\n                    food.NextLocation(snake);\r\n                    //蛇增长\r\n                    snake.grow();\r\n                }\r\n                //定位蛇尾部的位置（用于蛇增长时确定新关节的位置，在判断完蛇是否吃到食物后重定向）\r\n                snake.setTail();\r\n                //重新画图\r\n                repaint();\r\n            }\r\n            //窗体大小是否变化\r\n            if (isResizable()&&collection!=null) {\r\n                //各部分同步变化\r\n                reSize();\r\n            }\r\n        }\r\n    };\r\n    private Timer timer = new Timer();\r\n\r\n\r\n\r\n    //构造函数区，初始化各对象，属性\r\n    public GameFrame() {\r\n        super.setTitle(\"贪吃蛇\");\r\n        super.setSize(941, 664);\r\n        super.setLayout(null);\r\n        super.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);\r\n        super.setFocusable(true);\r\n        super.setLocationRelativeTo(null);\r\n        super.addKeyListener(this);\r\n\r\n\r\n        //为timer分配任务task，在0毫秒后开始，每200毫秒执行一次\r\n        timer.scheduleAtFixedRate(task,0,200);\r\n\r\n\r\n        enemy = new Enemy[5];\r\n        for (int i = 0;i < 5;i++) {\r\n            enemy[i]= new Enemy();\r\n        }\r\n        collection.setFrame(this);\r\n        this.toMain();\r\n    }\r\n    @Override\r\n    public void keyTyped(KeyEvent e) {\r\n\r\n    }\r\n\r\n    @Override\r\n    //键盘监听区\r\n    public void keyPressed(KeyEvent e) {\r\n        //x为按下按键的字符的ascii值\r\n        int x = e.getKeyCode();\r\n        if (getGameScene() == GameFrame.GameScene.game) {\r\n            snake.setDirection(x);\r\n            if (x==80) game_scene = GameScene.pause;\r\n        } else if (getGameScene() == GameFrame.GameScene.main) {\r\n            if (x == 32) toGame();\r\n            if (x==27) System.exit(0);\r\n        } else if (getGameScene() == GameFrame.GameScene.end) {\r\n            if (x == 32) toGame();\r\n            if (x==77) toMain();\r\n        } else if (getGameScene() == GameFrame.GameScene.pause) {\r\n            if (x==80) game_scene = GameScene.game;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void keyReleased(KeyEvent e) {\r\n\r\n    }\r\n\r\n    //绘画区\r\n    @Override\r\n    public void paint(Graphics g) {\r\n        if (game_scene == GameScene.game) {\r\n            //定义一张图片\r\n            image = this.createImage(getWidth(), getHeight());\r\n            //定义此图片的画笔g_image\r\n            Graphics g_image = image.getGraphics();\r\n            //使用画笔g清除画面\r\n            g_image.clearRect(0, 0, getWidth(), getHeight());\r\n            //使用画笔g画出蛇\r\n            snake.paint(g_image, l, x, y);\r\n            camera.paint(g_image,l,x,y);\r\n            //使用画笔g画出食物\r\n            food.paint(g_image, l, x, y);\r\n            for (int i = 0;i < 5;i++) {\r\n                //使用画笔g画出敌人\r\n                enemy[i].paint(g_image,l,x,y);\r\n            }\r\n            //使用画笔g画出网格\r\n            g_image.setColor(Color.BLACK);\r\n            for (int i = 0; i <= 31; i++) {\r\n                g_image.setColor(Color.BLACK);\r\n                if (i == 0 || i == 31)\r\n                    g_image.setColor(Color.RED);\r\n                g_image.drawLine(i * l + x, y, i * l + x, 21 * l + y);\r\n            }\r\n            for (int i = 0; i <= 21; i++) {\r\n                g_image.setColor(Color.BLACK);\r\n                if (i == 0 || i == 21)\r\n                    g_image.setColor(Color.RED);\r\n                g_image.drawLine( x, i * l + y, 31 * l + x, i * l + y);\r\n            }\r\n            //把图片画到frame上\r\n            g.drawImage(image, 0, 0, null);\r\n        }\r\n    }\r\n\r\n\r\n    public GameScene getGameScene() {\r\n        return game_scene;\r\n    }\r\n\r\n    public void setGameScene(GameScene game_scene) {\r\n        this.game_scene = game_scene;\r\n    }\r\n\r\n    public void reSize() {\r\n        l = Math.min((getHeight() - 34) / 21, (getWidth() - 11) / 31);\r\n        x = (getWidth() - 11 - l * 31) / 2 + 5;\r\n        y = (getHeight() - 34 - l * 21) / 2 + 30;\r\n        collection.reSize(x, y, l);\r\n    }\r\n\r\n\r\n    public void toMain() {\r\n        collection.toMain();\r\n        game_scene = GameScene.main;\r\n    }\r\n\r\n    public void toGame() {\r\n        collection.toGame();\r\n        food.init();\r\n        snake.init();\r\n        game_scene = GameScene.game;\r\n    }\r\n\r\n    public void toEnd() {\r\n        repaint();\r\n        collection.toEnd();\r\n        game_scene = GameScene.end;\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Snake/src/Main/GameFrame.java b/Snake/src/Main/GameFrame.java
--- a/Snake/src/Main/GameFrame.java	
+++ b/Snake/src/Main/GameFrame.java	
@@ -132,7 +132,7 @@
             snake.paint(g_image, l, x, y);
             camera.paint(g_image,l,x,y);
             //使用画笔g画出食物
-            food.paint(g_image, l, x, y);
+            food.paint(g_image, l, x, y,camera);
             for (int i = 0;i < 5;i++) {
                 //使用画笔g画出敌人
                 enemy[i].paint(g_image,l,x,y);
