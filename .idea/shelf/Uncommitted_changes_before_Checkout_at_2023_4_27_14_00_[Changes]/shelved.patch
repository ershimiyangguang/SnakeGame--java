Index: Snake/src/Object/Enemy.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Object;\r\n\r\nimport Main.GameFrame;\r\n\r\nimport java.awt.*;\r\nimport java.util.Random;\r\nimport java.awt.Rectangle;\r\n\r\npublic class Enemy {\r\n    private Location location=new Location();//位置\r\n    public enum Enemystate{attack,escape}   //敌人的状态\r\n    public Enemystate enemystate;\r\n    boolean  attack_direction; //攻击的方向\r\n    int escape_direction;  //逃跑的方向\r\n    private int damage;//伤害\r\n    //函数\r\n\r\n    public Enemy() {\r\n        init();\r\n    }\r\n    //重置敌人位置与伤害\r\n    public void init() {\r\n        Random r =new Random();\r\n        location.setX(r.nextInt(31));\r\n        location.setY(r.nextInt(21));   //随机生成敌人的位置\r\n        this.damage=2;\r\n        this.enemystate=Enemystate.attack;\r\n\r\n\r\n    }\r\n    //攻击蛇\r\n    public void attack(Snake snake, GameFrame frame,int x,int y,int l) {\r\n        if(enemystate==Enemystate.attack) {    //当敌人状态为攻击时，判断敌人是否攻击到蛇\r\n            Rectangle r = new Rectangle(location.getX() * l + x, location.getY() * l + y, 30, 30);\r\n            Location location1[] = new Location[1000];\r\n            location1 = snake.getSnake_body();\r\n            for (int i = 0; i < snake.getLength(); i++) {\r\n                if (r.contains(location1[i].getX() * l + x, location1[i].getY() * l + y, l, l)) {\r\n                    snake.setLength(snake.getLength() - 1);//如果攻击到蛇，则蛇的长度-1，并且敌人的状态改为逃跑\r\n                    enemystate =Enemystate. escape;\r\n                    break;\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    //移动\r\n    public void move(Snake snake) {  //敌人移动\r\n        Location location1[] = new Location[1000];\r\n        Location head = new Location();\r\n        location1 = snake.getSnake_body();\r\n        attack_direction = new Random().nextBoolean();\r\n        if (enemystate ==Enemystate. attack) {//如果敌人状态为攻击，则敌人根据蛇的位置自动改变自己的位置\r\n            if (location1[0].getX() > location.getX() && location1[0].getY() > location.getY()) {\r\n                if (attack_direction)\r\n                {\r\n                    location.setX(location.getX() + 1);\r\n                    escape_direction=1;\r\n                }\r\n                else\r\n                {\r\n                    location.setY(location.getY() + 1);\r\n                    escape_direction=2;\r\n                }\r\n            } else if (location1[0].getX() < location.getX() && location1[0].getY() > location.getY()) {\r\n                if (attack_direction)\r\n                {\r\n                    location.setX(location.getX() - 1);\r\n                    escape_direction=-1;\r\n                }\r\n                else\r\n                {\r\n                    location.setY(location.getY() + 1);\r\n                    escape_direction=2;\r\n                }\r\n            } else if (location1[0].getX() < location.getX() && location1[0].getY() < location.getY()) {\r\n                if (attack_direction)\r\n                {\r\n                    location.setX(location.getX() - 1);\r\n                    escape_direction=-1;\r\n                }\r\n                else\r\n                { location.setY(location.getY() - 1);\r\n                escape_direction=-2;\r\n                }\r\n            } else {\r\n                if (attack_direction)\r\n                {\r\n                    location.setX(location.getX() + 1);\r\n                    escape_direction=1;\r\n                }\r\n                else\r\n                {\r\n                    location.setY(location.getY() - 1);\r\n                    escape_direction=-2;\r\n                }\r\n            }\r\n\r\n        }\r\n        else{    //如果敌人状态逃跑\r\n            if(escape_direction==1)\r\n            {\r\n                location.setX(location.getX()-1);\r\n\r\n            }\r\n            else if(escape_direction==-1){\r\n                location.setX(location.getX()+1);\r\n            }\r\n            else if(escape_direction==2)\r\n            {\r\n                location.setY(location.getY()-1);\r\n            }\r\n            else{\r\n                location.setY(location.getY()+1);\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public void paint(Graphics gImage, int l, int x, int y) {\r\n        if(location.getX()>=0&&location.getX()<=31&&location.getY()>=0&&location.getY()<=21)\r\n        {\r\n        gImage.setColor(Color.BLACK);\r\n        gImage.fillRect((location.getX()*l)+x,(location.getY()*l+y),l,l);}\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Snake/src/Object/Enemy.java b/Snake/src/Object/Enemy.java
--- a/Snake/src/Object/Enemy.java	(revision 834d1f0e197e604cba61aa80ca9757801d1089bc)
+++ b/Snake/src/Object/Enemy.java	(date 1682575222666)
@@ -83,7 +83,7 @@
                 }
                 else
                 { location.setY(location.getY() - 1);
-                escape_direction=-2;
+                    escape_direction=-2;
                 }
             } else {
                 if (attack_direction)
@@ -124,8 +124,8 @@
     public void paint(Graphics gImage, int l, int x, int y) {
         if(location.getX()>=0&&location.getX()<=31&&location.getY()>=0&&location.getY()<=21)
         {
-        gImage.setColor(Color.BLACK);
-        gImage.fillRect((location.getX()*l)+x,(location.getY()*l+y),l,l);}
+            gImage.setColor(Color.BLACK);
+            gImage.fillRect((location.getX()*l)+x,(location.getY()*l+y),l,l);}
 
     }
 }
